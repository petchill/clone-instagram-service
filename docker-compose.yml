version: '3.9'

services:
  clone-instagram-service:
    image: clone-instagram-service:latest
    ports:
      - 5000:5000
    build: 
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - postgres

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=thisispassword
      - POSTGRES_USER=root
      - POSTGRES_DB=clone-instagram

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      CLUSTER_ID: CCU3c2KkToC9KFbxJdCLhQ
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      
  kafdrop:
    image: obsidiandynamics/kafdrop:4.2.0
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"
